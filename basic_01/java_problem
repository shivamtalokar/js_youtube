// rotate array by d place
class Solution {
    public static void main(String args[]){
        int arr[] = {1,2,3,4,5,6,7},k=15;
       int n=arr.length,temp[] = new int[n];
       k = k%n;
        for(int j=0;j<k;j++){
           temp[j] = arr[j];
        }
        for(int i = k;i<n;i++){
            arr[i-k] = arr[i];
        }
        for(int i = 0;i<k;i++){
        arr[n-k+i] = temp[i];
             }
               
        
          for(int i = 0;i<n;i++){
                System.out.println(arr[i])   ;
                 }
       
        
    }
}


// move all 0 at the end 
class Solution {
    public static void main (String args[]) {
    int[] arr = {1, 2, 0, 3, 0, 1};
        int n = arr.length;
       int pointer = 0; int temp;
       
       
        for(int i= 0;i<n;i++){
           if(arr[i]==0){
              pointer = i;
              break;
           }
        }
        
        
           for(int i= pointer+1;i<n-1;i++){
               if(arr[i+1]!=0){
               temp = arr[pointer];
               arr[pointer] = arr[i+1];
               arr[i+1] = temp;
                 pointer++;
               }
            
           }
        
        for(int i= 0;i<n;i++){
                System.out.println(arr[i]);
        }
            

        
    }
}

// union of two sorted array 

//     with the help of array list
    import java.util.*;

public class UnionOfArrays {
    public static List<Integer> unionOfArrays(int[] arr1, int[] arr2) {
        List<Integer> union = new ArrayList<>();
        int i = 0, j = 0;

        while (i < arr1.length && j < arr2.length) {
            if (arr1[i] < arr2[j]) {
                union.add(arr1[i]);
                i++;
            } else if (arr1[i] > arr2[j]) {
                union.add(arr2[j]);
                j++;
            } else { // arr1[i] == arr2[j]
                union.add(arr1[i]);
                i++;
                j++;
            }
        }

        // Add remaining elements of arr1 (if any)
        while (i < arr1.length) {
            union.add(arr1[i]);
            i++;
        }

        // Add remaining elements of arr2 (if any)
        while (j < arr2.length) {
            union.add(arr2[j]);
            j++;
        }

        return union;
    }

    public static void main(String[] args) {
        int[] arr1 = {1, 3, 4, 5, 7};
        int[] arr2 = {2, 3, 5, 6};
        List<Integer> union = unionOfArrays(arr1, arr2);
        System.out.println("Union of arrays: " + union);
    }
}


//      without array list  
import java.util.Arrays;

public class UnionOfArrays {
    public static int[] unionOfArrays(int[] arr1, int[] arr2) {
        int n1 = arr1.length;
        int n2 = arr2.length;
        
        // Create an array to store the union (maximum possible size is n1 + n2)
        int[] union = new int[n1 + n2];
        
        int i = 0, j = 0, k = 0; // i for arr1, j for arr2, k for union
        
        while (i < n1 && j < n2) {
            if (arr1[i] < arr2[j]) {
                union[k++] = arr1[i++];
            } else if (arr1[i] > arr2[j]) {
                union[k++] = arr2[j++];
            } else { // arr1[i] == arr2[j]
                union[k++] = arr1[i++];
                j++; // Move j to skip the duplicate element in arr2
            }
        }
        
        // Add remaining elements of arr1 (if any)
        while (i < n1) {
            union[k++] = arr1[i++];
        }
        
        // Add remaining elements of arr2 (if any)
        while (j < n2) {
            union[k++] = arr2[j++];
        }
        
        // Resize the union array to k elements (if necessary)
        return Arrays.copyOf(union, k);
    }

    public static void main(String[] args) {
        int[] arr1 = {1, 3, 4, 5, 7};
        int[] arr2 = {2, 3, 5, 6};
        int[] union = unionOfArrays(arr1, arr2);
        
        System.out.print("Union of arrays: ");
        for (int num : union) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}
